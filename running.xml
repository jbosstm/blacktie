<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../project_documentation.ent">
%BOOK_ENTITIES;
]>
<section id="chap-buffer-types">
	<title>Advanced run instructions for BlackTie</title>
	<para>
		The wiki contains the latest instructions for running BlackTie,
		the
		relevant article can be found here:
		http://community.jboss.org/wiki/DeployingBlacktie
	</para>

	<section>
		<title>Running the TAO implementation repository with BlackTie</title>
		<section>
			<title>Introduction</title>

			<para>
				The docs for the ImR are locted at</para>
			<para>http://www.dre.vanderbilt.edu/Doxygen/Stable/tao/implrepo_service/usersguide.html
			</para>
			<para>and</para>
			<para>http://www.dre.vanderbilt.edu/~schmidt/DOC_ROOT/TAO/docs/implrepo/index.html
			</para>

			<para>The build instructions on the WIKI includes a step on building
				the
				TAO Implementation repository (it is essentially cd
				$ACE_ROOT/ACEXML
				&amp;&amp; make; cd
				$TAO_ROOT/orbsvcs/ImplRepo_Service;
				make)</para>

			<para>Make sure the ImR executable is on your path:</para>

			<para>
				<literal>export PATH=$PATH:$TAO_ROOT/orbsvcs/ImplRepo_Service
				</literal>
			</para>
		</section>
		<section>
			<title>To start the ImR:</title>

			<para>
				<literal>ImplRepo_Service -o locator.ior -d -x</literal>
			</para>

			<para>locator.ior is the name of the file that the ImR uses to store
				server records.</para>

			<para>Servers that create persistent IORs embed the location of the
				ImR
				into the IORs it creates. On each host where we need to run a
				server
				we need to start an 'activator' which in turn knows how to
				contact
				the ImR:</para>

			<para>
				<literal>ImR_Activator ImplRepoService=file://locator.ior &amp;
				</literal>
			</para>

			<para>(Question: if the ImR_Activator and ImplRepo_Service are
				running on different
				hosts which startup option do we need to use to
				enable the activator
				to find the ImR?)</para>
		</section>

		<section>
			<title> Adding a new server</title>

			<para>The ImR can start servers on demand - if a client has an IOR
				that
				embeds the ImR location then the ImR knows how to start the
				required
				server. You can add servers using the tao_imr executable by
				specifying the comand line to start server. (Note that there is also
				an option to start servers whenever the ImR is started).</para>

			<para>For example, to start our quickstarts:</para>
			<para>
				<literal>tao_imr -ORBInitRef ImplRepoService=file://locator.ior add
					ATMI_RM_202 -c
					"./server -c linux" -w
					"/home/mmusgrov/blacktie/trunk/atmibroker-xatmi/src/quickstart/txfooapp"
					-e
					LD_LIBRARY_PATH="/home/mmusgrov/blacktie/releases/blacktie-1.0-MR6-SNAPSHOT/lib:.:/usr/local/product/11.1.0/db_1/lib:/home/mmusgrov/blacktie/trunk/atmibroker-tx/target/cxx/test/lib:/home/mmusgrov/blacktie/util/ACE+TAO-5.7.1/ACE_wrappers/lib"
					-e
					BLACKTIE_SCHEMA_DIR="/home/mmusgrov/blacktie/releases/blacktie-1.0-MR6-SNAPSHOT/schemas/xsd"
				</literal>
			</para>

			<para>(where ATMI_RM_202 is a unique name for the server) or we could
				supply shell or batch files to simplify the command.</para>



			<para>The unique name for the server must correspond to the name of a
				POA
				running in the server (this is a limitation of the TAO orb).
			</para>
			<para>
				I use a single POA for recovery (created in
				<literal>XAResourceManagerFactory::create_poa</literal>
				) and use the environment
				variable BLACKTIE_SERVER_NAME for the name
				of this poa. We must use
				the same name when starting servers via the
				ImR.
			</para>

			<para>
				The
				<literal>BLACKTIE_SERVER_NAME</literal>
				environment variable is defined by
				concatenating domain, server and
				serverid (see
				<literal>AtmiBrokerServer::serverinit</literal>
				).
			</para>

			<para>To manually start this server use tao_imr command providing it
				with
				the name of the server we just added:</para>

			<para>
				<programlisting>tao_imr -ORBInitRef ImplRepoService=file://locator.ior start ATMI_RM_202</programlisting>
			</para>

			<para>The server needs to know that is should use an ImR. To do this
				we
				need to update the btconfig.xml file and add:</para>

			<para>
				<literal>-ORBUseImR 1</literal>
				to the ORBOPT environment variable. For example:
			</para>

			<para>
				<programlisting language="XML" role="XML"><xi:include
					href="extras/btconfig-useimr.xml" xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" /></programlisting>
			</para>

		</section>

		<section>
			<title>
				Is the ImR a single point of failure?</title>

			<para>We can run multiple ImRs. I/We still need to investigate how
				this
				works. Here's a quote from the TAO docs:</para>

			<para>"One or more Implementation Repositories will be stored in
				additional
				profiles in the IOR. Other Implementation Repositories can
				also be
				located by multicasting (on a default multicast group) the
				server
				name of the Persistent Object the client is interested in. The
				default multicast group and default port of the Implementation
				Repository can be overridden through command line options or
				environment variables.</para>

			<para>In most cases, one Implementation Repository will be enough.
				For
				redundancy, several Implementation Repositories can be
				specified."</para>
		</section>
	</section>

	<section>
		<title>Running BlackTie with a different host IP address</title>
		<para>If you want to run blacktie server and client on a different
			host, such as run blacktie server on linux and run blacktie client on
			windows.</para>

		<orderedlist>
			<listitem>
				<para>update Name Service running in JBoss AS</para>
				<para>edit JBOSS_HOME/server/all/conf/jacorb.properties chanage
					ORBInitRef.NameService=corbaloc::localhost:3528/JBoss/Naming/root
					to
					ORBInitRef.NameService=corbaloc::YOUR_HOST_IPADDR:3528/JBoss/Naming/root
				</para>
				<para>uncomment #OAIAddr, and add OAIAddr=YOUR_HOST_IPADDR</para>
				<para>Note: I tried to use 0.0.0.0, but it does not work. JBoss runs
					OK, but both blacktie server and client are running errors with
					CORBA::TRANSIENT.</para>
			</listitem>

			<listitem>
				<para>update btconfig.xml to use
					corbaloc::YOUR_HOST_IPADDR:3528/NameService</para>
			</listitem>
			<listitem>
				<para>Make sure firewall doesn't block the packages</para>
			</listitem>
			<listitem>
				<para>run.sh | bat -c all on linux or windows as usual.</para>
			</listitem>
			<listitem>
				<para>run server on linux and run client on windows</para>
			</listitem>
		</orderedlist>
	</section>
	<section>
		<title>Using ESB contented based routing in Blacktie</title>
		<section>
			<title>Install JBossESB</title>
			<para>Now we use JBoss AS 5.1.GA and HornetQ 2.1.2 Final</para>
			<orderedlist>
				<listitem>
					<para>copy jboss-as-hornetq-int.jar to $JBOSS_HOME/common/lib</para>
				</listitem>
				<listitem>
					<para>copy hornetq-deployers-jboss-beans.xml to $JBOSS_HOME/server/all-with-hornetq/deployers</para>
				</listitem>
				<listitem>
					<para>cd jbossesb-version/install</para>
				</listitem>
				<listitem>
					<para>update deployment.properties to point to JBossAS installation.</para>
					<para>
						<programlisting>
							org.jboss.esb.server.home=/home/zhfeng/tools/jboss-5.1.0.GA
							org.jboss.esb.server.config=all-with-hornetq
						</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>update build.xml and add hornetq.sar to the messaging providers to detect.
					<programlisting>
						 &lt;available property="hornetq.present" file="${deploy.dir}/hornetq.sar"/&gt;
					</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>ant deploy</para>
				</listitem>
			</orderedlist>
		</section>
		<section>
			<title>Running CBR Quickstart</title>
			<orderedlist>
				<listitem>
					<para>deploy esb to jbossas
					<programlisting>
						cd ${BLACKTIE_HOME}/quickstart/cbr
						mvn install
					</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>generate server and client
						<programlisting>
							# BUILD THE CBR TestOne SERVER
							generate_server -Dservice.names=CBR_TestOne -Dserver.includes=TestOneService.c -Dserver.name=server_one
							mv server server_one

							# BUILD THE CBR TestTwo SERVER
							generate_server -Dservice.names=CBR_TestTwo -Dserver.includes=TestTwoService.c -Dserver.name=server_two
							mv server server_two

							# BUILD CLIENT
							generate_client -Dclient.includes=client.c
						</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>start server_one and server_two
						<programlisting>
							btadmin startup
						</programlisting>
					</para>
				</listitem>
				<listitem>
					<para>running client</para>
				</listitem>
			</orderedlist>
		</section>
		<section>
			<title>Content Routing Rulers</title>
			<para>
				This quickstart has three services: CBR_Request, CBR_TestOne and CBRTestTwo. All tpcall messages that send to CBR_Rquest will been routed by xpath ruler.
				<programlisting><xi:include
					href="extras/rulers.drl" xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" /></programlisting>
			</para>
		</section>
	</section>
</section>